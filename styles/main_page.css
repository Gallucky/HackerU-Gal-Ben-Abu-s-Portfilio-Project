/* Defining global properties / variables for the mainly used colors.
Primary Color: Charcoal
Secondary Color: Teal
Accent Color: Cyan / Aqua
*/
:root {
    --primary-color: #36454f;
    --secondary-color: #008080;
    --accent-color: #ffa500;

    --outline-thickness: 1;
}

/* Remove any existing elements margins and paddings */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--primary-color);
    font-family: "Rubik";
    overflow: hidden;
}

/* | Class Description |
    This class will make the desired element's text be with a outline
    Element with small text the outline may look incomplete / fragmented,
    for this there is a class called: --outline-thickness of the value 0.4px
    should resolve this issue.
 */
.outline-text {
    --outline-thickness: 1px;
    text-shadow: var(--outline-thickness) var(--outline-thickness) 0 black,
        calc(-1 * var(--outline-thickness)) calc(-1 * var(--outline-thickness))
            0 black,
        var(--outline-thickness) calc(-1 * var(--outline-thickness)) 0 black,
        calc(-1 * var(--outline-thickness)) var(--outline-thickness) 0 black,
        0 var(--outline-thickness) 0 black,
        0 calc(-1 * var(--outline-thickness)) 0 black,
        var(--outline-thickness) 0 0 black,
        calc(-1 * var(--outline-thickness)) 0 0 black;
}

/* #region ============ Toolbar Area ============ */

/* The top / main container of this area */
.tool-bar {
    margin: 1px 12.5%;
    width: 75%;
    height: 75px;

    position: sticky;
    /* Making sure this area is top most layer. */
    z-index: 9999;

    background-color: var(--secondary-color);
    border: 1px solid black;

    display: flex;
    justify-content: center;
    align-items: center;
}

/*
    This wrapper div makes the alignment of it's 2
    (children elements [divs] → one to the right and the one to the left),
    possible by using the position relative to it.
    While position absolute to it's children because
    the tool-bar div already have a position of sticky.
    This div keeps the sticky functionality of the
    parent element [div - tool-bar],
    while also allowing for the alignment to occur.
*/
.tool-bar-content-wrapper {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
}

.profile-area {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    text-align: left;

    position: absolute;
    left: 50px;
    gap: 5px;
}

#profile-image {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    border: 1px solid black;
    padding: 1px;
    margin: 1px;
    background-image: url("..\\images\\profile.jpg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;

    transition: all 2s ease-in-out;
}

#profile-image:hover {
    transform: translate(30vw, 50vh) scale(5);
}

#profile-name {
    width: 100px;
    height: 75%;
    transform: scale(2);
    margin: 0 3.5vw;
    filter: brightness(250%) hue-rotate(230deg);
    transition: filter 5s ease-in-out;
}

#profile-name:hover {
    filter: brightness(250%) hue-rotate(540deg);
}

.links {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row-reverse;

    text-align: right;
    font-weight: bold;

    gap: 20px;
    padding: 2px;

    position: absolute;
    right: 50px;
}

/* Each link in the links class */
.links > a {
    width: max-content;
    position: relative;
    text-decoration: none;

    font-family: "Rubik";
    color: var(--accent-color);

    transition: all 1s ease-in-out;
}

/* When the element is hovered... */
.links > a:hover {
    transform: scale(1.2);
}

/* This defines the same element but for for the underline gradient */
.links > a::before {
    content: "";
    background: var(--primary-color);

    background: linear-gradient(
        to right,
        #0d1b2a,
        #1e2a78,
        #3a1c71,
        #6a1b9a,
        #2c3e50,
        #00bcd4
    );

    border-radius: 2px;
    height: 2px;
    width: 100%;
    position: absolute;
    bottom: -1px;
    left: 0;
}

/* White gradient color effect when hovered - for the underline */
.links > a:hover::before {
    background: linear-gradient(
        to left,
        rgba(255, 255, 255, 1),
        rgba(255, 255, 255, 0.9),
        rgba(255, 255, 255, 0.8),
        rgba(255, 255, 255, 0.7)
    );

    transform: scale(1.1);
}

/* #endregion */

/* #region ============ Header Area ============ */

.header-area {
    width: 100vw;
    height: 40vh;

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

    border: 1px dotted black;
    margin: 2vh 0;
    padding: 5%;

    background: transparent;
    position: relative;
}

.header-area::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -1;

    background-image: url("../images/tech-background.jpg");
    background-repeat: no-repeat;
    background-size: 200% 200%;
    filter: hue-rotate(0deg);

    animation: header-area-bg-anim 60s linear infinite alternate;
}

@keyframes header-area-bg-anim {
    0% {
        background-position: 0% 0%;
        filter: hue-rotate(0deg);
    }

    10% {
        background-position: 10% 0%;
        filter: hue-rotate(36deg);
    }

    20% {
        background-position: 20% 0%;
        filter: hue-rotate(72deg);
    }

    30% {
        background-position: 30% 0%;
        filter: hue-rotate(108deg);
    }

    40% {
        background-position: 40% 0%;
        filter: hue-rotate(144deg);
    }

    50% {
        background-position: 50% 0%;
        filter: hue-rotate(180deg);
    }

    60% {
        background-position: 60% 0%;
        filter: hue-rotate(216deg);
    }

    70% {
        background-position: 70% 0%;
        filter: hue-rotate(252deg);
    }

    80% {
        background-position: 80% 0%;
        filter: hue-rotate(288deg);
    }

    90% {
        background-position: 90% 0%;
        filter: hue-rotate(324deg);
    }

    100% {
        background-position: 100% 0%;
        filter: hue-rotate(360deg);
    }
}

.header-area h1 {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

    margin-bottom: 1vh;
    color: var(--accent-color);
    font-size: 60px;
    /* font-family: ; */
}

.header-area p {
    width: 50%;

    display: flex;
    align-items: center;
    justify-content: center;

    text-align: center;
    font-size: 20px;
    color: white;
}

/* #endregion */

/* #region ============ Programming Languages Area ============ */

.programming-languages-and-more-area {
    width: 100%;
    height: 7vh;

    display: grid;
    grid-template-columns: 3fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 3fr;
    grid-template-rows: 1fr 1fr 1fr;
    margin-top: -2vh;

    background-color: var(--secondary-color);
    transition: height 0.5s ease-in-out;

    position: relative;
}

/* 
.programming-languages-and-more-area:hover {
    height: 30vh;
} */

.language-card {
    width: 3em;
    height: 3em;

    margin: 10px;

    transition: all 0.5s ease;

    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
}

/* #region | Setting the images of the languages as background | */

/* #region → HTML ← */
.language-card#html {
    background-image: url("../images/languages_logos/html.png");
    grid-column-start: 2;
}

/* #endregion */

/* #region → CSS ← */
.language-card#css {
    background-image: url("../images/languages_logos/css.png");
}

/* #endregion */

/* #region → JavaScript ← */
.language-card#js {
    background-image: url("../images/languages_logos/javascript.png");
}

/* #endregion */

/* #region → Java ← */
.language-card#java {
    background-image: url("../images/languages_logos/java.png");
    filter: brightness(1.5);
}

/* #endregion */

/* #region → Python ← */
.language-card#python {
    background-image: url("../images/languages_logos/python.png");
}

/* #endregion */

/* #region → Powershell ← */
.language-card#powershell {
    background-image: url("../images/languages_logos/powershell.png");
}

/* #endregion */

/* #region → C# ← */
.language-card#csharp {
    background-image: url("../images/languages_logos/csharp.png");
}

/* #endregion */

/* #region → C Plus Plus ← */
.language-card#cpp {
    background-image: url("../images/languages_logos/c++.png");
}

/* #endregion */

/* #region → C ← */
.language-card#c {
    background-image: url("../images/languages_logos/c.png");
}

/* #endregion */

/* #region → Batch ← */
.language-card#batch {
    background-image: url("../images/languages_logos/batch.png");
}

/* #endregion */

/* #region → Assembly ← */
.language-card#assembly {
    background-image: url("../images/languages_logos/assembly.png");
}

/* #endregion */

/* #endregion */

/* The hovered language card */
.programming-languages-and-more-area .language-card:hover {
    transform: scale(1.25);
}

/* Any remaining cards next to the hovered language on the right. */
.programming-languages-and-more-area .language-card:hover~.language-card,
/* The card next to the hovered language on the left. */
.programming-languages-and-more-area .language-card:has(~ .language-card:hover) {
    transform: scale(0.9);
    filter: brightness(0.5) !important;
}

#dropdown-area {
    width: 100%;
    height: 100%;

    position: absolute;

    background-color: var(--secondary-color);

    z-index: -1;

    transition: height 1s ease-in-out;
}

.language-card:hover ~ #dropdown-area {
    height: 400%;
}

.curr-lang-logo {
    width: 0%;
    /* height: 5em; */
    height: 0%;

    grid-area: 2 / 4 / 3 / 4;
    margin: 30% -10%;

    border: 1px solid black;

    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;

    opacity: 0;
    transition: height 1s ease-in-out, width 1s ease-in-out;
}

.language-card:hover ~ .curr-lang-logo {
    opacity: 1;
    height: 100%;
    width: 100%;

    /* background-size: cover; */
    transition: height 1s 0.3s ease-in-out;
}

.programming-languages-and-more-area h2 {
    height: 0;
    font-size: 0px;
    border: 1px solid black;
    color: var(--accent-color);

    grid-area: 2 / 5 / 2 / 11;

    margin: 5% 0;
    opacity: 0;

    transition: font-size 1s ease-in-out;
}

.language-card:hover ~ h2 {
    opacity: 1;
    height: fit-content;
    font-size: 30px;
    transition: font-size 1s 0.3s ease-in-out;
}

.programming-languages-and-more-area p {
    height: fit-content;
    border: 1px solid blue;
    color: white;
    font-size: 0;

    grid-area: 3 / 5 / 3 / 11;

    opacity: 0;
    transition: font-size 1s ease-in-out;
}

.language-card:hover ~ p {
    opacity: 1;
    font-size: 20px;
    transition: font-size 1s 0.3s ease-in-out;
}

/* Setting the approprite language logo when that language logo is hovered */

.language-card:hover#html ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/html.png");
}

.language-card:hover#css ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/css.png");
}

.language-card:hover#js ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/javascript.png");
}

.language-card:hover#java ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/java.png");
    filter: brightness(1.5);
}

.language-card:hover#python ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/python.png");
}

.language-card:hover#powershell ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/powershell.png");
}

.language-card:hover#csharp ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/csharp.png");
}

.language-card:hover#cpp ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/c++.png");
}

.language-card:hover#c ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/c.png");
}

.language-card:hover#batch ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/batch.png");
}

.language-card:hover#assembly ~ .curr-lang-logo {
    background-image: url("../images/languages_logos/assembly.png");
}

/* #endregion */

/* #region ============ Separator Area ============ */

.separator {
}

/* #endregion */

/* #region ============ About Section ============ */

.about-section {
}

/* #endregion */

/* #region ============ Services and Projects Area ============ */

.services-projects {
}

/* #endregion */

/* #region ============ Contact Area ============ */

.contact-section {
}

/* #endregion */

/* #region ============ License Area ============ */

.license-footer-bar {
}

/* #endregion */
